{
  "vertices": [
    {
      "name": "src2",
      "key": 0,
      "type": "project"
    },
    {
      "name": "AddOp",
      "key": 1,
      "type": "class"
    },
    {
      "name": "BinaryOp",
      "key": 2,
      "type": "class"
    },
    {
      "name": "Calculator",
      "key": 3,
      "type": "class"
    },
    {
      "name": "ClosingBracket",
      "key": 4,
      "type": "class"
    },
    {
      "name": "CalcToken",
      "key": 5,
      "type": "class"
    },
    {
      "name": "DivideOp",
      "key": 6,
      "type": "class"
    },
    {
      "name": "ExpressionTree",
      "key": 7,
      "type": "class",
      "attributes": [
        "TreeNode root",
        "StackAsArray stack"
      ]
    },
    {
      "name": "ExpTokenizer",
      "key": 8,
      "type": "class",
      "attributes": [
        "String result",
        "int index"
      ]
    },
    {
      "name": "Enumeration",
      "key": 9,
      "type": "class"
    },
    {
      "name": "Object",
      "key": 10,
      "type": "class"
    },
    {
      "name": "MultiplyOp",
      "key": 11,
      "type": "class"
    },
    {
      "name": "OpeningBracket",
      "key": 12,
      "type": "class"
    },
    {
      "name": "PowOp",
      "key": 13,
      "type": "class"
    },
    {
      "name": "StackCalculator",
      "key": 14,
      "type": "class"
    },
    {
      "name": "SubtractOp",
      "key": 15,
      "type": "class"
    },
    {
      "name": "Tester",
      "key": 16,
      "type": "class",
      "attributes": [
        "boolean testPassed",
        "int testNum"
      ]
    },
    {
      "name": "TreeCalculator",
      "key": 17,
      "type": "class",
      "attributes": [
        "ExpressionTree tree"
      ]
    },
    {
      "name": "ValueToken",
      "key": 18,
      "type": "class",
      "attributes": [
        "double val"
      ]
    },
    {
      "name": "operate",
      "key": 31,
      "type": "method",
      "attributes": [
        "double left",
        "double right"
      ]
    },
    {
      "name": "getPrecedence",
      "key": 32,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 33,
      "type": "method"
    },
    {
      "name": "evaluate",
      "key": 34,
      "type": "method",
      "attributes": [
        "String expr"
      ]
    },
    {
      "name": "toString",
      "key": 35,
      "type": "method"
    },
    {
      "name": "operate",
      "key": 36,
      "type": "method",
      "attributes": [
        "double left",
        "double right"
      ]
    },
    {
      "name": "getPrecedence",
      "key": 37,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 38,
      "type": "method"
    },
    {
      "name": "ExpressionTree",
      "key": 39,
      "type": "method"
    },
    {
      "name": "ExpressionTree",
      "key": 40,
      "type": "method"
    },
    {
      "name": "BuildExpressionTree",
      "key": 41,
      "type": "method",
      "attributes": [
        "String postfixExp"
      ]
    },
    {
      "name": "ExpTokenizer",
      "key": 42,
      "type": "method"
    },
    {
      "name": "nextElement",
      "key": 43,
      "type": "method"
    },
    {
      "name": "hasMoreElements",
      "key": 44,
      "type": "method"
    },
    {
      "name": "peek",
      "key": 45,
      "type": "method"
    },
    {
      "name": "nextToken",
      "key": 46,
      "type": "method"
    },
    {
      "name": "hasMoreTokens",
      "key": 47,
      "type": "method"
    },
    {
      "name": "countTokens",
      "key": 48,
      "type": "method"
    },
    {
      "name": "operate",
      "key": 49,
      "type": "method",
      "attributes": [
        "double left",
        "double right"
      ]
    },
    {
      "name": "getPrecedence",
      "key": 50,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 51,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 52,
      "type": "method"
    },
    {
      "name": "operate",
      "key": 53,
      "type": "method",
      "attributes": [
        "double left",
        "double right"
      ]
    },
    {
      "name": "getPrecedence",
      "key": 54,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 55,
      "type": "method"
    },
    {
      "name": "infixToPostfix",
      "key": 56,
      "type": "method",
      "attributes": [
        "String string"
      ]
    },
    {
      "name": "evaluate",
      "key": 57,
      "type": "method",
      "attributes": [
        "String expr"
      ]
    },
    {
      "name": "operate",
      "key": 58,
      "type": "method",
      "attributes": [
        "double left",
        "double right"
      ]
    },
    {
      "name": "getPrecedence",
      "key": 59,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 60,
      "type": "method"
    },
    {
      "name": "main",
      "key": 61,
      "type": "method",
      "attributes": [
        "String args"
      ]
    },
    {
      "name": "test",
      "key": 62,
      "type": "method",
      "attributes": [
        "boolean exp",
        "String msg"
      ]
    },
    {
      "name": "testAddOp",
      "key": 63,
      "type": "method"
    },
    {
      "name": "testSubtractOp",
      "key": 64,
      "type": "method"
    },
    {
      "name": "testMultiplyOp",
      "key": 65,
      "type": "method"
    },
    {
      "name": "testDivideOp",
      "key": 66,
      "type": "method"
    },
    {
      "name": "testPowOp",
      "key": 67,
      "type": "method"
    },
    {
      "name": "testOpeningBracket",
      "key": 68,
      "type": "method"
    },
    {
      "name": "testClosingBracket",
      "key": 69,
      "type": "method"
    },
    {
      "name": "testValueToken",
      "key": 70,
      "type": "method"
    },
    {
      "name": "testStackCalculator",
      "key": 71,
      "type": "method"
    },
    {
      "name": "testTreeCalculator",
      "key": 72,
      "type": "method"
    },
    {
      "name": "TreeCalculator",
      "key": 73,
      "type": "method"
    },
    {
      "name": "evaluate",
      "key": 74,
      "type": "method",
      "attributes": [
        "String expr"
      ]
    },
    {
      "name": "getRealResult",
      "key": 75,
      "type": "method",
      "attributes": [
        "TreeNode node"
      ]
    },
    {
      "name": "inOrder1",
      "key": 76,
      "type": "method",
      "attributes": [
        "TreeNode root",
        "String str"
      ]
    },
    {
      "name": "inOrder2",
      "key": 77,
      "type": "method",
      "attributes": [
        "TreeNode root",
        "String str"
      ]
    },
    {
      "name": "inOrder3",
      "key": 78,
      "type": "method",
      "attributes": [
        "TreeNode root",
        "String str"
      ]
    },
    {
      "name": "getInfix",
      "key": 79,
      "type": "method"
    },
    {
      "name": "getPrefix",
      "key": 80,
      "type": "method"
    },
    {
      "name": "getPostfix",
      "key": 81,
      "type": "method"
    },
    {
      "name": "ValueToken",
      "key": 82,
      "type": "method"
    },
    {
      "name": "getValue",
      "key": 83,
      "type": "method"
    },
    {
      "name": "toString",
      "key": 84,
      "type": "method"
    }
  ],
  "edges": [
    {
      "type": "class",
      "from": 0,
      "to": 1
    },
    {
      "type": "class",
      "from": 0,
      "to": 2
    },
    {
      "type": "class",
      "from": 0,
      "to": 3
    },
    {
      "type": "class",
      "from": 0,
      "to": 4
    },
    {
      "type": "class",
      "from": 0,
      "to": 5
    },
    {
      "type": "class",
      "from": 0,
      "to": 6
    },
    {
      "type": "class",
      "from": 0,
      "to": 7
    },
    {
      "type": "class",
      "from": 0,
      "to": 8
    },
    {
      "type": "class",
      "from": 0,
      "to": 9
    },
    {
      "type": "class",
      "from": 0,
      "to": 10
    },
    {
      "type": "class",
      "from": 0,
      "to": 11
    },
    {
      "type": "class",
      "from": 0,
      "to": 12
    },
    {
      "type": "class",
      "from": 0,
      "to": 13
    },
    {
      "type": "class",
      "from": 0,
      "to": 14
    },
    {
      "type": "class",
      "from": 0,
      "to": 15
    },
    {
      "type": "class",
      "from": 0,
      "to": 16
    },
    {
      "type": "class",
      "from": 0,
      "to": 17
    },
    {
      "type": "class",
      "from": 0,
      "to": 18
    },
    {
      "type": "implements",
      "from": 8,
      "to": 9
    },
    {
      "type": "implements",
      "from": 14,
      "to": 3
    },
    {
      "type": "implements",
      "from": 17,
      "to": 3
    },
    {
      "type": "extends",
      "from": 1,
      "to": 2
    },
    {
      "type": "extends",
      "from": 4,
      "to": 5
    },
    {
      "type": "extends",
      "from": 6,
      "to": 2
    },
    {
      "type": "extends",
      "from": 8,
      "to": 10
    },
    {
      "type": "extends",
      "from": 11,
      "to": 2
    },
    {
      "type": "extends",
      "from": 12,
      "to": 5
    },
    {
      "type": "extends",
      "from": 13,
      "to": 2
    },
    {
      "type": "extends",
      "from": 15,
      "to": 2
    },
    {
      "type": "extends",
      "from": 18,
      "to": 5
    },
    {
      "type": "method",
      "from": 1,
      "to": 31
    },
    {
      "type": "method",
      "from": 1,
      "to": 32
    },
    {
      "type": "method",
      "from": 1,
      "to": 33
    },
    {
      "type": "method",
      "from": 3,
      "to": 34
    },
    {
      "type": "method",
      "from": 4,
      "to": 35
    },
    {
      "type": "method",
      "from": 6,
      "to": 36
    },
    {
      "type": "method",
      "from": 6,
      "to": 37
    },
    {
      "type": "method",
      "from": 6,
      "to": 38
    },
    {
      "type": "method",
      "from": 7,
      "to": 39
    },
    {
      "type": "method",
      "from": 7,
      "to": 40
    },
    {
      "type": "method",
      "from": 7,
      "to": 41
    },
    {
      "type": "method",
      "from": 8,
      "to": 42
    },
    {
      "type": "method",
      "from": 8,
      "to": 43
    },
    {
      "type": "method",
      "from": 8,
      "to": 44
    },
    {
      "type": "method",
      "from": 8,
      "to": 45
    },
    {
      "type": "method",
      "from": 8,
      "to": 46
    },
    {
      "type": "method",
      "from": 8,
      "to": 47
    },
    {
      "type": "method",
      "from": 8,
      "to": 48
    },
    {
      "type": "method",
      "from": 11,
      "to": 49
    },
    {
      "type": "method",
      "from": 11,
      "to": 50
    },
    {
      "type": "method",
      "from": 11,
      "to": 51
    },
    {
      "type": "method",
      "from": 12,
      "to": 52
    },
    {
      "type": "method",
      "from": 13,
      "to": 53
    },
    {
      "type": "method",
      "from": 13,
      "to": 54
    },
    {
      "type": "method",
      "from": 13,
      "to": 55
    },
    {
      "type": "method",
      "from": 14,
      "to": 56
    },
    {
      "type": "method",
      "from": 14,
      "to": 57
    },
    {
      "type": "method",
      "from": 15,
      "to": 58
    },
    {
      "type": "method",
      "from": 15,
      "to": 59
    },
    {
      "type": "method",
      "from": 15,
      "to": 60
    },
    {
      "type": "method",
      "from": 16,
      "to": 61
    },
    {
      "type": "method",
      "from": 16,
      "to": 62
    },
    {
      "type": "method",
      "from": 16,
      "to": 63
    },
    {
      "type": "method",
      "from": 16,
      "to": 64
    },
    {
      "type": "method",
      "from": 16,
      "to": 65
    },
    {
      "type": "method",
      "from": 16,
      "to": 66
    },
    {
      "type": "method",
      "from": 16,
      "to": 67
    },
    {
      "type": "method",
      "from": 16,
      "to": 68
    },
    {
      "type": "method",
      "from": 16,
      "to": 69
    },
    {
      "type": "method",
      "from": 16,
      "to": 70
    },
    {
      "type": "method",
      "from": 16,
      "to": 71
    },
    {
      "type": "method",
      "from": 16,
      "to": 72
    },
    {
      "type": "method",
      "from": 17,
      "to": 73
    },
    {
      "type": "method",
      "from": 17,
      "to": 74
    },
    {
      "type": "method",
      "from": 17,
      "to": 75
    },
    {
      "type": "method",
      "from": 17,
      "to": 76
    },
    {
      "type": "method",
      "from": 17,
      "to": 77
    },
    {
      "type": "method",
      "from": 17,
      "to": 78
    },
    {
      "type": "method",
      "from": 17,
      "to": 79
    },
    {
      "type": "method",
      "from": 17,
      "to": 80
    },
    {
      "type": "method",
      "from": 17,
      "to": 81
    },
    {
      "type": "method",
      "from": 18,
      "to": 82
    },
    {
      "type": "method",
      "from": 18,
      "to": 83
    },
    {
      "type": "method",
      "from": 18,
      "to": 84
    },
    {
      "type": "method",
      "from": 43,
      "to": 46,
      "number_call": 1
    },
    {
      "type": "method",
      "from": 47,
      "to": 44,
      "number_call": 2
    },
    {
      "type": "method",
      "from": 56,
      "to": 43,
      "number_call": 1
    },
    {
      "type": "method",
      "from": 56,
      "to": 33,
      "number_call": 2
    },
    {
      "type": "method",
      "from": 57,
      "to": 43,
      "number_call": 3
    },
    {
      "type": "method",
      "from": 61,
      "to": 63,
      "number_call": 1
    },
    {
      "type": "method",
      "from": 61,
      "to": 64,
      "number_call": 2
    },
    {
      "type": "method",
      "from": 61,
      "to": 65,
      "number_call": 3
    },
    {
      "type": "method",
      "from": 61,
      "to": 66,
      "number_call": 4
    },
    {
      "type": "method",
      "from": 61,
      "to": 67,
      "number_call": 5
    },
    {
      "type": "method",
      "from": 61,
      "to": 68,
      "number_call": 6
    },
    {
      "type": "method",
      "from": 61,
      "to": 69,
      "number_call": 7
    },
    {
      "type": "method",
      "from": 61,
      "to": 70,
      "number_call": 8
    },
    {
      "type": "method",
      "from": 61,
      "to": 71,
      "number_call": 9
    },
    {
      "type": "method",
      "from": 61,
      "to": 72,
      "number_call": 10
    },
    {
      "type": "method",
      "from": 63,
      "to": 62,
      "number_call": 11
    },
    {
      "type": "method",
      "from": 64,
      "to": 62,
      "number_call": 12
    },
    {
      "type": "method",
      "from": 65,
      "to": 62,
      "number_call": 13
    },
    {
      "type": "method",
      "from": 66,
      "to": 62,
      "number_call": 14
    },
    {
      "type": "method",
      "from": 67,
      "to": 62,
      "number_call": 15
    },
    {
      "type": "method",
      "from": 68,
      "to": 62,
      "number_call": 16
    },
    {
      "type": "method",
      "from": 69,
      "to": 62,
      "number_call": 17
    },
    {
      "type": "method",
      "from": 70,
      "to": 62,
      "number_call": 18
    },
    {
      "type": "method",
      "from": 71,
      "to": 56,
      "number_call": 19
    },
    {
      "type": "method",
      "from": 71,
      "to": 62,
      "number_call": 20
    },
    {
      "type": "method",
      "from": 71,
      "to": 34,
      "number_call": 21
    },
    {
      "type": "method",
      "from": 72,
      "to": 34,
      "number_call": 22
    },
    {
      "type": "method",
      "from": 72,
      "to": 62,
      "number_call": 23
    },
    {
      "type": "method",
      "from": 72,
      "to": 79,
      "number_call": 24
    },
    {
      "type": "method",
      "from": 72,
      "to": 81,
      "number_call": 25
    },
    {
      "type": "method",
      "from": 72,
      "to": 80,
      "number_call": 26
    },
    {
      "type": "method",
      "from": 74,
      "to": 75,
      "number_call": 1
    },
    {
      "type": "method",
      "from": 75,
      "to": 75,
      "number_call": 2
    },
    {
      "type": "method",
      "from": 76,
      "to": 76,
      "number_call": 3
    },
    {
      "type": "method",
      "from": 77,
      "to": 77,
      "number_call": 4
    },
    {
      "type": "method",
      "from": 78,
      "to": 78,
      "number_call": 5
    },
    {
      "type": "method",
      "from": 79,
      "to": 76,
      "number_call": 6
    },
    {
      "type": "method",
      "from": 80,
      "to": 78,
      "number_call": 7
    },
    {
      "type": "method",
      "from": 81,
      "to": 77,
      "number_call": 8
    }
  ]
}